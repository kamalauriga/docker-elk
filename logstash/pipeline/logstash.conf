input {
   tcp {
                port => 5000
                codec => json
                #type => "logstash"
        }
  syslog {
    host => "logstash"
    port => 5001
    type => "nginxlogs"
  }
}

filter {
  if [program] == "nginx_access" {
    grok {
      patterns_dir => "/etc/logstash/patterns"
      match => { "message" => "%{NGINX_ACCESS}" }
      remove_tag => ["nginx_access", "_grokparsefailure"]
      add_field => {
        "type" => "nginx_access"
      }
      remove_field => ["program"]
    }

    mutate {                                                                                                                                 
            convert => [ "bytes_received", "integer"]
            convert => [ "bytes_sent", "integer"]
            convert => [ "upstream_time", "float"]
            convert => [ "request_time", "float"]
    }

    date {
            match => [ "timestamp_nginx_access" , "dd/MMM/YYYY:HH:mm:ss Z" ]
    }
  }

  if [program] == "nginx_error" {
    grok {
      patterns_dir => "/etc/logstash/patterns"
      match => { "message" => "%{NGINX_ERROR}" }
      remove_tag => ["nginx_error", "_grokparsefailure"]
      add_field => {
        "type" => "nginx_error"
      }
      remove_field => ["program"]
    }

    date {
      match => ["time_local", "YYYY/MM/dd HH:mm:ss"]
      target => "@timestamp"
      remove_field => "time_local"
    }
  }
}

output {
  if [type] == "nginx_access" or [type] == "nginx_error" {
    elasticsearch {
      hosts => ["http://elasticsearch:9200"]
      user => "elastic"
      password => "Cdsjmb8tYjuENShPOz8F"
      manage_template => true
      template_overwrite => true
      template => "/etc/logstash/templates/es_template.json"
      index => "nginxlogs-%{+YYYY.MM.dd}"
    }
  } else {
    elasticsearch {
      hosts => ["http://elasticsearch:9200"]
      user => "elastic"
      password => "Cdsjmb8tYjuENShPOz8F"
      
    }
  }
}